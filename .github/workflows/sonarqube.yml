# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow helps you trigger a SonarQube analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# (this feature is available starting from SonarQube 9.7, Developer Edition and above)

# 1. Make sure you add a valid GitHub configuration to your SonarQube (Administration > DevOps platforms > GitHub)
# 2. Import your project on SonarQube (create two projects: backend and frontend)
# 3. Set the following GitHub secrets in your repository:
#    - SONAR_HOST_URL: your SonarQube server URL
#    - SONAR_TOKEN_BACK: token for backend project
#    - SONAR_TOKEN_FRONT: token for frontend project
#    - SONAR_PROJECT_KEY_BACK: SonarQube key for backend
#    - SONAR_PROJECT_KEY_FRONT: SonarQube key for frontend

name: SonarQube analysis split (backend & frontend)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  sonar-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test backend with coverage
        run: |
          cd back
          mvn clean verify jacoco:report

      - name: Analyze backend with SonarQube
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_BACK }}
            -Dsonar.sources=back/src/main/java
            -Dsonar.tests=back/src/test/java
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml
            -Dsonar.exclusions=**/*.spec.ts

  sonar-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies and run frontend tests with coverage
        run: |
          cd front
          npm ci
          npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Analyze frontend with SonarQube
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_FRONT }}
            -Dsonar.sources=front/src/app
            -Dsonar.tests=front/src
            -Dsonar.javascript.lcov.reportPaths=front/coverage/lcov.info
            -Dsonar.exclusions=**/*.spec.ts
